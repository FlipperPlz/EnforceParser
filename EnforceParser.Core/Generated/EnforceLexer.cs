//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/developer/Desktop/EnforceParser/EnforceParser.Core/Generated\EnforceLexer.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace EnforceParser.Core.Generated;
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class EnforceLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SINGLE_LINE_COMMENT=1, EMPTY_DELIMITED_COMMENT=2, DELIMITED_COMMENT=3, 
		PREPROCESSOR_DIRECTIVE=4, WHITESPACES=5, CLASS=6, ENUM=7, SWITCH=8, EXTENDS=9, 
		CONST=10, BREAK=11, CASE=12, ELSE=13, FOR=14, CONTINUE=15, FOREACH=16, 
		IF=17, NEW=18, RETURN=19, THIS=20, THREAD=21, VOID=22, WHILE=23, AUTOPTR=24, 
		AUTO=25, REF=26, NULL=27, NOTNULL=28, FUNC=29, NATIVE=30, VOLATILE=31, 
		PROTO=32, STATIC=33, OWNED=34, REFERENCE=35, OUT=36, PROTECTED=37, EVENT=38, 
		TYPEDEF=39, MODDED=40, OVERRIDE=41, SEALED=42, INOUT=43, SUPER=44, TYPENAME=45, 
		POINTER=46, GOTO=47, PRIVATE=48, EXTERNAL=49, DELETE=50, LOCAL=51, TYPE_INT=52, 
		TYPE_FLOAT=53, TYPE_BOOL=54, TYPE_STRING=55, TYPE_VECTOR=56, DEFAULT=57, 
		Increment=58, Decrement=59, LShift_Assign=60, RShift_Assign=61, Subtract_Assign=62, 
		Add_Assign=63, Multiply_Assign=64, Divide_Assign=65, Or_Assign=66, Xor_Assign=67, 
		LessEqual=68, GreaterEqual=69, And_Assign=70, Inequal=71, Equal=72, LogicalOr=73, 
		LogicalAnd=74, BitwiseOr=75, BitwiseXor=76, BitwiseAnd=77, BitwiseNot=78, 
		Greater=79, Less=80, Assign=81, Subtract=82, Add=83, Multiply=84, Divide=85, 
		LParenthesis=86, RParenthesis=87, LCurly=88, RCurly=89, Comma=90, Colon=91, 
		Semicolon=92, LSBracket=93, RSBracket=94, Dot=95, Bang=96, DoubleQuote=97, 
		SingleQuote=98, Modulo=99, IDENTIFIER=100, PREPROC_LINE=101, PREPROC_FILE=102, 
		LiteralString=103, LiteralInteger=104, LiteralFloat=105, LiteralBoolean=106, 
		PREPROC_Whitespaces=107, PREPROC_digits=108, PREPROC_define=109, PREPROC_include=110, 
		PREPROC_undef=111, PREPROC_if=112, PREPROC_ifdef=113, PREPROC_ifndef=114, 
		PREPROC_else=115, PREPROC_endif=116, PREPROC_LParenthesis=117, PREPROC_RParenthesis=118, 
		PREPROC_LSBracket=119, PREPROC_RSBracket=120, PREPROC_Comma=121, PREPROC_Add=122, 
		PREPROC_Subtract=123, PREPROC_Semicolon=124, PREPROC_Assign=125;
	public const int
		COMMENTS_CHANNEL=2, PREPROC=3;
	public const int
		PREPROC_MODE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_CHANNEL", "PREPROC"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "PREPROC_MODE"
	};

	public static readonly string[] ruleNames = {
		"SINGLE_LINE_COMMENT", "EMPTY_DELIMITED_COMMENT", "DELIMITED_COMMENT", 
		"PREPROCESSOR_DIRECTIVE", "WHITESPACES", "CLASS", "ENUM", "SWITCH", "EXTENDS", 
		"CONST", "BREAK", "CASE", "ELSE", "FOR", "CONTINUE", "FOREACH", "IF", 
		"NEW", "RETURN", "THIS", "THREAD", "VOID", "WHILE", "AUTOPTR", "AUTO", 
		"REF", "NULL", "NOTNULL", "FUNC", "NATIVE", "VOLATILE", "PROTO", "STATIC", 
		"OWNED", "REFERENCE", "OUT", "PROTECTED", "EVENT", "TYPEDEF", "MODDED", 
		"OVERRIDE", "SEALED", "INOUT", "SUPER", "TYPENAME", "POINTER", "GOTO", 
		"PRIVATE", "EXTERNAL", "DELETE", "LOCAL", "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", 
		"TYPE_STRING", "TYPE_VECTOR", "DEFAULT", "Increment", "Decrement", "LShift_Assign", 
		"RShift_Assign", "Subtract_Assign", "Add_Assign", "Multiply_Assign", "Divide_Assign", 
		"Or_Assign", "Xor_Assign", "LessEqual", "GreaterEqual", "And_Assign", 
		"Inequal", "Equal", "LogicalOr", "LogicalAnd", "BitwiseOr", "BitwiseXor", 
		"BitwiseAnd", "BitwiseNot", "Greater", "Less", "Assign", "Subtract", "Add", 
		"Multiply", "Divide", "LParenthesis", "RParenthesis", "LCurly", "RCurly", 
		"Comma", "Colon", "Semicolon", "LSBracket", "RSBracket", "Dot", "Bang", 
		"DoubleQuote", "SingleQuote", "Modulo", "IDENTIFIER", "PREPROC_LINE", 
		"PREPROC_FILE", "LiteralString", "LiteralInteger", "LiteralFloat", "LiteralBoolean", 
		"PREPROC_Whitespaces", "PREPROC_digits", "PREPROC_define", "PREPROC_include", 
		"PREPROC_undef", "PREPROC_if", "PREPROC_ifdef", "PREPROC_ifndef", "PREPROC_else", 
		"PREPROC_endif", "PREPROC_LParenthesis", "PREPROC_RParenthesis", "PREPROC_LSBracket", 
		"PREPROC_RSBracket", "PREPROC_Comma", "PREPROC_Add", "PREPROC_Subtract", 
		"PREPROC_Semicolon", "PREPROC_Assign", "EnforceEscapeSequence", "Diget", 
		"Number", "DecimalNumber"
	};


	public EnforceLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public EnforceLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'class'", "'enum'", "'switch'", "'extends'", 
		"'const'", "'break'", "'case'", null, "'for'", "'contine'", "'foreach'", 
		null, "'new'", "'return'", "'this'", "'thread'", "'void'", "'while'", 
		"'autoptr'", "'auto'", "'ref'", "'null'", "'notnull'", "'func'", "'native'", 
		"'volatile'", "'proto'", "'static'", "'owned'", "'reference'", "'out'", 
		"'protected'", "'event'", "'typedef'", "'modded'", "'override'", "'sealed'", 
		"'inout'", "'super'", "'typename'", "'pointer'", "'goto'", "'private'", 
		"'external'", "'delete'", "'local'", "'int'", "'float'", "'bool'", "'string'", 
		"'vector'", "'default'", "'++'", "'--'", "'<<='", "'>>='", "'-='", "'+='", 
		"'*='", "'/='", "'|='", "'^='", "'<='", "'>='", "'&='", "'!='", "'=='", 
		"'||'", "'&&'", "'|'", "'^'", "'&'", "'~'", "'>'", "'<'", null, null, 
		null, "'*'", "'/'", null, null, "'{'", "'}'", null, "':'", null, null, 
		null, "'.'", "'!'", "'\"'", "'''", "'%'", null, "'__LINE__'", "'__FILE__'", 
		null, null, null, null, null, null, "'define'", "'include'", "'undef'", 
		null, "'ifdef'", "'ifndef'", null, "'endif'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SINGLE_LINE_COMMENT", "EMPTY_DELIMITED_COMMENT", "DELIMITED_COMMENT", 
		"PREPROCESSOR_DIRECTIVE", "WHITESPACES", "CLASS", "ENUM", "SWITCH", "EXTENDS", 
		"CONST", "BREAK", "CASE", "ELSE", "FOR", "CONTINUE", "FOREACH", "IF", 
		"NEW", "RETURN", "THIS", "THREAD", "VOID", "WHILE", "AUTOPTR", "AUTO", 
		"REF", "NULL", "NOTNULL", "FUNC", "NATIVE", "VOLATILE", "PROTO", "STATIC", 
		"OWNED", "REFERENCE", "OUT", "PROTECTED", "EVENT", "TYPEDEF", "MODDED", 
		"OVERRIDE", "SEALED", "INOUT", "SUPER", "TYPENAME", "POINTER", "GOTO", 
		"PRIVATE", "EXTERNAL", "DELETE", "LOCAL", "TYPE_INT", "TYPE_FLOAT", "TYPE_BOOL", 
		"TYPE_STRING", "TYPE_VECTOR", "DEFAULT", "Increment", "Decrement", "LShift_Assign", 
		"RShift_Assign", "Subtract_Assign", "Add_Assign", "Multiply_Assign", "Divide_Assign", 
		"Or_Assign", "Xor_Assign", "LessEqual", "GreaterEqual", "And_Assign", 
		"Inequal", "Equal", "LogicalOr", "LogicalAnd", "BitwiseOr", "BitwiseXor", 
		"BitwiseAnd", "BitwiseNot", "Greater", "Less", "Assign", "Subtract", "Add", 
		"Multiply", "Divide", "LParenthesis", "RParenthesis", "LCurly", "RCurly", 
		"Comma", "Colon", "Semicolon", "LSBracket", "RSBracket", "Dot", "Bang", 
		"DoubleQuote", "SingleQuote", "Modulo", "IDENTIFIER", "PREPROC_LINE", 
		"PREPROC_FILE", "LiteralString", "LiteralInteger", "LiteralFloat", "LiteralBoolean", 
		"PREPROC_Whitespaces", "PREPROC_digits", "PREPROC_define", "PREPROC_include", 
		"PREPROC_undef", "PREPROC_if", "PREPROC_ifdef", "PREPROC_ifndef", "PREPROC_else", 
		"PREPROC_endif", "PREPROC_LParenthesis", "PREPROC_RParenthesis", "PREPROC_LSBracket", 
		"PREPROC_RSBracket", "PREPROC_Comma", "PREPROC_Add", "PREPROC_Subtract", 
		"PREPROC_Semicolon", "PREPROC_Assign"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "EnforceLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static EnforceLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,125,936,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
		2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
		2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
		2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
		2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,
		2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,
		2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,
		2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,
		2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,
		2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,
		2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,
		104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,
		2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,
		2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,
		2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,
		2,128,7,128,1,0,1,0,1,0,1,0,5,0,265,8,0,10,0,12,0,268,9,0,1,0,1,0,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,3,1,279,8,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,287,8,
		2,10,2,12,2,290,9,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,5,3,299,8,3,10,3,12,3,
		302,9,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
		6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,
		1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
		1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
		1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
		1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
		1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
		1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
		1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
		1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,
		1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
		1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,
		1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,
		1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
		1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
		1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,
		1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
		1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
		1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,60,
		1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,65,
		1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,69,1,69,1,69,
		1,70,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,
		1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,
		1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,
		1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,1,94,1,94,1,95,1,95,
		1,96,1,96,1,97,1,97,1,98,1,98,1,99,4,99,751,8,99,11,99,12,99,752,1,100,
		1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,
		1,101,1,101,1,101,1,101,1,101,1,102,1,102,1,102,5,102,776,8,102,10,102,
		12,102,779,9,102,1,102,1,102,1,103,1,103,1,104,1,104,1,105,1,105,1,105,
		1,105,1,105,1,105,1,105,1,105,1,105,3,105,796,8,105,1,106,4,106,799,8,
		106,11,106,12,106,800,1,106,1,106,1,107,4,107,806,8,107,11,107,12,107,
		807,1,107,1,107,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
		1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,110,1,110,
		1,110,1,110,1,110,1,110,1,110,1,110,1,111,1,111,1,111,1,111,1,111,1,112,
		1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,113,1,113,1,113,1,113,1,113,
		1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,114,1,114,1,114,1,115,
		1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,116,1,116,1,116,1,116,1,117,
		1,117,1,117,1,117,1,118,1,118,1,118,1,118,1,119,1,119,1,119,1,119,1,120,
		1,120,1,120,1,120,1,121,1,121,1,121,1,121,1,122,1,122,1,122,1,122,1,123,
		1,123,1,123,1,123,1,124,1,124,1,124,1,124,1,125,1,125,1,125,1,125,1,125,
		1,125,3,125,918,8,125,1,126,1,126,1,127,3,127,923,8,127,1,127,4,127,926,
		8,127,11,127,12,127,927,1,128,1,128,1,128,4,128,933,8,128,11,128,12,128,
		934,2,288,777,0,129,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,
		11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,
		23,48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,
		35,72,36,74,37,76,38,78,39,80,40,82,41,84,42,86,43,88,44,90,45,92,46,94,
		47,96,48,98,49,100,50,102,51,104,52,106,53,108,54,110,55,112,56,114,57,
		116,58,118,59,120,60,122,61,124,62,126,63,128,64,130,65,132,66,134,67,
		136,68,138,69,140,70,142,71,144,72,146,73,148,74,150,75,152,76,154,77,
		156,78,158,79,160,80,162,81,164,82,166,83,168,84,170,85,172,86,174,87,
		176,88,178,89,180,90,182,91,184,92,186,93,188,94,190,95,192,96,194,97,
		196,98,198,99,200,100,202,101,204,102,206,103,208,104,210,105,212,106,
		214,107,216,108,218,109,220,110,222,111,224,112,226,113,228,114,230,115,
		232,116,234,117,236,118,238,119,240,120,242,121,244,122,246,123,248,124,
		250,125,252,0,254,0,256,0,258,0,2,0,1,4,2,0,10,10,13,13,3,0,9,10,13,13,
		32,32,4,0,48,57,65,90,95,95,97,122,1,0,48,57,945,0,2,1,0,0,0,0,4,1,0,0,
		0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,
		1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,
		0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,
		1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,
		0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,
		1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,
		0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,
		1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,
		0,0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,
		104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,
		114,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,122,1,0,0,0,0,
		124,1,0,0,0,0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,0,0,0,132,1,0,0,0,0,
		134,1,0,0,0,0,136,1,0,0,0,0,138,1,0,0,0,0,140,1,0,0,0,0,142,1,0,0,0,0,
		144,1,0,0,0,0,146,1,0,0,0,0,148,1,0,0,0,0,150,1,0,0,0,0,152,1,0,0,0,0,
		154,1,0,0,0,0,156,1,0,0,0,0,158,1,0,0,0,0,160,1,0,0,0,0,162,1,0,0,0,0,
		164,1,0,0,0,0,166,1,0,0,0,0,168,1,0,0,0,0,170,1,0,0,0,0,172,1,0,0,0,0,
		174,1,0,0,0,0,176,1,0,0,0,0,178,1,0,0,0,0,180,1,0,0,0,0,182,1,0,0,0,0,
		184,1,0,0,0,0,186,1,0,0,0,0,188,1,0,0,0,0,190,1,0,0,0,0,192,1,0,0,0,0,
		194,1,0,0,0,0,196,1,0,0,0,0,198,1,0,0,0,0,200,1,0,0,0,0,202,1,0,0,0,0,
		204,1,0,0,0,0,206,1,0,0,0,0,208,1,0,0,0,0,210,1,0,0,0,0,212,1,0,0,0,1,
		214,1,0,0,0,1,216,1,0,0,0,1,218,1,0,0,0,1,220,1,0,0,0,1,222,1,0,0,0,1,
		224,1,0,0,0,1,226,1,0,0,0,1,228,1,0,0,0,1,230,1,0,0,0,1,232,1,0,0,0,1,
		234,1,0,0,0,1,236,1,0,0,0,1,238,1,0,0,0,1,240,1,0,0,0,1,242,1,0,0,0,1,
		244,1,0,0,0,1,246,1,0,0,0,1,248,1,0,0,0,1,250,1,0,0,0,2,260,1,0,0,0,4,
		278,1,0,0,0,6,282,1,0,0,0,8,296,1,0,0,0,10,305,1,0,0,0,12,309,1,0,0,0,
		14,315,1,0,0,0,16,320,1,0,0,0,18,327,1,0,0,0,20,335,1,0,0,0,22,341,1,0,
		0,0,24,347,1,0,0,0,26,352,1,0,0,0,28,357,1,0,0,0,30,361,1,0,0,0,32,369,
		1,0,0,0,34,377,1,0,0,0,36,380,1,0,0,0,38,384,1,0,0,0,40,391,1,0,0,0,42,
		396,1,0,0,0,44,403,1,0,0,0,46,408,1,0,0,0,48,414,1,0,0,0,50,422,1,0,0,
		0,52,427,1,0,0,0,54,431,1,0,0,0,56,436,1,0,0,0,58,444,1,0,0,0,60,449,1,
		0,0,0,62,456,1,0,0,0,64,465,1,0,0,0,66,471,1,0,0,0,68,478,1,0,0,0,70,484,
		1,0,0,0,72,494,1,0,0,0,74,498,1,0,0,0,76,508,1,0,0,0,78,514,1,0,0,0,80,
		522,1,0,0,0,82,529,1,0,0,0,84,538,1,0,0,0,86,545,1,0,0,0,88,551,1,0,0,
		0,90,557,1,0,0,0,92,566,1,0,0,0,94,574,1,0,0,0,96,579,1,0,0,0,98,587,1,
		0,0,0,100,596,1,0,0,0,102,603,1,0,0,0,104,609,1,0,0,0,106,613,1,0,0,0,
		108,619,1,0,0,0,110,624,1,0,0,0,112,631,1,0,0,0,114,638,1,0,0,0,116,646,
		1,0,0,0,118,649,1,0,0,0,120,652,1,0,0,0,122,656,1,0,0,0,124,660,1,0,0,
		0,126,663,1,0,0,0,128,666,1,0,0,0,130,669,1,0,0,0,132,672,1,0,0,0,134,
		675,1,0,0,0,136,678,1,0,0,0,138,681,1,0,0,0,140,684,1,0,0,0,142,687,1,
		0,0,0,144,690,1,0,0,0,146,693,1,0,0,0,148,696,1,0,0,0,150,699,1,0,0,0,
		152,701,1,0,0,0,154,703,1,0,0,0,156,705,1,0,0,0,158,707,1,0,0,0,160,709,
		1,0,0,0,162,711,1,0,0,0,164,713,1,0,0,0,166,715,1,0,0,0,168,717,1,0,0,
		0,170,719,1,0,0,0,172,721,1,0,0,0,174,723,1,0,0,0,176,725,1,0,0,0,178,
		727,1,0,0,0,180,729,1,0,0,0,182,731,1,0,0,0,184,733,1,0,0,0,186,735,1,
		0,0,0,188,737,1,0,0,0,190,739,1,0,0,0,192,741,1,0,0,0,194,743,1,0,0,0,
		196,745,1,0,0,0,198,747,1,0,0,0,200,750,1,0,0,0,202,754,1,0,0,0,204,763,
		1,0,0,0,206,772,1,0,0,0,208,782,1,0,0,0,210,784,1,0,0,0,212,795,1,0,0,
		0,214,798,1,0,0,0,216,805,1,0,0,0,218,811,1,0,0,0,220,820,1,0,0,0,222,
		830,1,0,0,0,224,838,1,0,0,0,226,843,1,0,0,0,228,851,1,0,0,0,230,860,1,
		0,0,0,232,867,1,0,0,0,234,875,1,0,0,0,236,879,1,0,0,0,238,883,1,0,0,0,
		240,887,1,0,0,0,242,891,1,0,0,0,244,895,1,0,0,0,246,899,1,0,0,0,248,903,
		1,0,0,0,250,907,1,0,0,0,252,917,1,0,0,0,254,919,1,0,0,0,256,922,1,0,0,
		0,258,929,1,0,0,0,260,261,5,47,0,0,261,262,5,47,0,0,262,266,1,0,0,0,263,
		265,8,0,0,0,264,263,1,0,0,0,265,268,1,0,0,0,266,264,1,0,0,0,266,267,1,
		0,0,0,267,269,1,0,0,0,268,266,1,0,0,0,269,270,6,0,0,0,270,3,1,0,0,0,271,
		272,5,47,0,0,272,273,5,42,0,0,273,279,5,47,0,0,274,275,5,47,0,0,275,276,
		5,42,0,0,276,277,5,42,0,0,277,279,5,47,0,0,278,271,1,0,0,0,278,274,1,0,
		0,0,279,280,1,0,0,0,280,281,6,1,0,0,281,5,1,0,0,0,282,283,5,47,0,0,283,
		284,5,42,0,0,284,288,1,0,0,0,285,287,9,0,0,0,286,285,1,0,0,0,287,290,1,
		0,0,0,288,289,1,0,0,0,288,286,1,0,0,0,289,291,1,0,0,0,290,288,1,0,0,0,
		291,292,5,42,0,0,292,293,5,47,0,0,293,294,1,0,0,0,294,295,6,2,0,0,295,
		7,1,0,0,0,296,300,5,35,0,0,297,299,8,0,0,0,298,297,1,0,0,0,299,302,1,0,
		0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,303,1,0,0,0,302,300,1,0,0,0,303,
		304,6,3,1,0,304,9,1,0,0,0,305,306,7,1,0,0,306,307,1,0,0,0,307,308,6,4,
		1,0,308,11,1,0,0,0,309,310,5,99,0,0,310,311,5,108,0,0,311,312,5,97,0,0,
		312,313,5,115,0,0,313,314,5,115,0,0,314,13,1,0,0,0,315,316,5,101,0,0,316,
		317,5,110,0,0,317,318,5,117,0,0,318,319,5,109,0,0,319,15,1,0,0,0,320,321,
		5,115,0,0,321,322,5,119,0,0,322,323,5,105,0,0,323,324,5,116,0,0,324,325,
		5,99,0,0,325,326,5,104,0,0,326,17,1,0,0,0,327,328,5,101,0,0,328,329,5,
		120,0,0,329,330,5,116,0,0,330,331,5,101,0,0,331,332,5,110,0,0,332,333,
		5,100,0,0,333,334,5,115,0,0,334,19,1,0,0,0,335,336,5,99,0,0,336,337,5,
		111,0,0,337,338,5,110,0,0,338,339,5,115,0,0,339,340,5,116,0,0,340,21,1,
		0,0,0,341,342,5,98,0,0,342,343,5,114,0,0,343,344,5,101,0,0,344,345,5,97,
		0,0,345,346,5,107,0,0,346,23,1,0,0,0,347,348,5,99,0,0,348,349,5,97,0,0,
		349,350,5,115,0,0,350,351,5,101,0,0,351,25,1,0,0,0,352,353,5,101,0,0,353,
		354,5,108,0,0,354,355,5,115,0,0,355,356,5,101,0,0,356,27,1,0,0,0,357,358,
		5,102,0,0,358,359,5,111,0,0,359,360,5,114,0,0,360,29,1,0,0,0,361,362,5,
		99,0,0,362,363,5,111,0,0,363,364,5,110,0,0,364,365,5,116,0,0,365,366,5,
		105,0,0,366,367,5,110,0,0,367,368,5,101,0,0,368,31,1,0,0,0,369,370,5,102,
		0,0,370,371,5,111,0,0,371,372,5,114,0,0,372,373,5,101,0,0,373,374,5,97,
		0,0,374,375,5,99,0,0,375,376,5,104,0,0,376,33,1,0,0,0,377,378,5,105,0,
		0,378,379,5,102,0,0,379,35,1,0,0,0,380,381,5,110,0,0,381,382,5,101,0,0,
		382,383,5,119,0,0,383,37,1,0,0,0,384,385,5,114,0,0,385,386,5,101,0,0,386,
		387,5,116,0,0,387,388,5,117,0,0,388,389,5,114,0,0,389,390,5,110,0,0,390,
		39,1,0,0,0,391,392,5,116,0,0,392,393,5,104,0,0,393,394,5,105,0,0,394,395,
		5,115,0,0,395,41,1,0,0,0,396,397,5,116,0,0,397,398,5,104,0,0,398,399,5,
		114,0,0,399,400,5,101,0,0,400,401,5,97,0,0,401,402,5,100,0,0,402,43,1,
		0,0,0,403,404,5,118,0,0,404,405,5,111,0,0,405,406,5,105,0,0,406,407,5,
		100,0,0,407,45,1,0,0,0,408,409,5,119,0,0,409,410,5,104,0,0,410,411,5,105,
		0,0,411,412,5,108,0,0,412,413,5,101,0,0,413,47,1,0,0,0,414,415,5,97,0,
		0,415,416,5,117,0,0,416,417,5,116,0,0,417,418,5,111,0,0,418,419,5,112,
		0,0,419,420,5,116,0,0,420,421,5,114,0,0,421,49,1,0,0,0,422,423,5,97,0,
		0,423,424,5,117,0,0,424,425,5,116,0,0,425,426,5,111,0,0,426,51,1,0,0,0,
		427,428,5,114,0,0,428,429,5,101,0,0,429,430,5,102,0,0,430,53,1,0,0,0,431,
		432,5,110,0,0,432,433,5,117,0,0,433,434,5,108,0,0,434,435,5,108,0,0,435,
		55,1,0,0,0,436,437,5,110,0,0,437,438,5,111,0,0,438,439,5,116,0,0,439,440,
		5,110,0,0,440,441,5,117,0,0,441,442,5,108,0,0,442,443,5,108,0,0,443,57,
		1,0,0,0,444,445,5,102,0,0,445,446,5,117,0,0,446,447,5,110,0,0,447,448,
		5,99,0,0,448,59,1,0,0,0,449,450,5,110,0,0,450,451,5,97,0,0,451,452,5,116,
		0,0,452,453,5,105,0,0,453,454,5,118,0,0,454,455,5,101,0,0,455,61,1,0,0,
		0,456,457,5,118,0,0,457,458,5,111,0,0,458,459,5,108,0,0,459,460,5,97,0,
		0,460,461,5,116,0,0,461,462,5,105,0,0,462,463,5,108,0,0,463,464,5,101,
		0,0,464,63,1,0,0,0,465,466,5,112,0,0,466,467,5,114,0,0,467,468,5,111,0,
		0,468,469,5,116,0,0,469,470,5,111,0,0,470,65,1,0,0,0,471,472,5,115,0,0,
		472,473,5,116,0,0,473,474,5,97,0,0,474,475,5,116,0,0,475,476,5,105,0,0,
		476,477,5,99,0,0,477,67,1,0,0,0,478,479,5,111,0,0,479,480,5,119,0,0,480,
		481,5,110,0,0,481,482,5,101,0,0,482,483,5,100,0,0,483,69,1,0,0,0,484,485,
		5,114,0,0,485,486,5,101,0,0,486,487,5,102,0,0,487,488,5,101,0,0,488,489,
		5,114,0,0,489,490,5,101,0,0,490,491,5,110,0,0,491,492,5,99,0,0,492,493,
		5,101,0,0,493,71,1,0,0,0,494,495,5,111,0,0,495,496,5,117,0,0,496,497,5,
		116,0,0,497,73,1,0,0,0,498,499,5,112,0,0,499,500,5,114,0,0,500,501,5,111,
		0,0,501,502,5,116,0,0,502,503,5,101,0,0,503,504,5,99,0,0,504,505,5,116,
		0,0,505,506,5,101,0,0,506,507,5,100,0,0,507,75,1,0,0,0,508,509,5,101,0,
		0,509,510,5,118,0,0,510,511,5,101,0,0,511,512,5,110,0,0,512,513,5,116,
		0,0,513,77,1,0,0,0,514,515,5,116,0,0,515,516,5,121,0,0,516,517,5,112,0,
		0,517,518,5,101,0,0,518,519,5,100,0,0,519,520,5,101,0,0,520,521,5,102,
		0,0,521,79,1,0,0,0,522,523,5,109,0,0,523,524,5,111,0,0,524,525,5,100,0,
		0,525,526,5,100,0,0,526,527,5,101,0,0,527,528,5,100,0,0,528,81,1,0,0,0,
		529,530,5,111,0,0,530,531,5,118,0,0,531,532,5,101,0,0,532,533,5,114,0,
		0,533,534,5,114,0,0,534,535,5,105,0,0,535,536,5,100,0,0,536,537,5,101,
		0,0,537,83,1,0,0,0,538,539,5,115,0,0,539,540,5,101,0,0,540,541,5,97,0,
		0,541,542,5,108,0,0,542,543,5,101,0,0,543,544,5,100,0,0,544,85,1,0,0,0,
		545,546,5,105,0,0,546,547,5,110,0,0,547,548,5,111,0,0,548,549,5,117,0,
		0,549,550,5,116,0,0,550,87,1,0,0,0,551,552,5,115,0,0,552,553,5,117,0,0,
		553,554,5,112,0,0,554,555,5,101,0,0,555,556,5,114,0,0,556,89,1,0,0,0,557,
		558,5,116,0,0,558,559,5,121,0,0,559,560,5,112,0,0,560,561,5,101,0,0,561,
		562,5,110,0,0,562,563,5,97,0,0,563,564,5,109,0,0,564,565,5,101,0,0,565,
		91,1,0,0,0,566,567,5,112,0,0,567,568,5,111,0,0,568,569,5,105,0,0,569,570,
		5,110,0,0,570,571,5,116,0,0,571,572,5,101,0,0,572,573,5,114,0,0,573,93,
		1,0,0,0,574,575,5,103,0,0,575,576,5,111,0,0,576,577,5,116,0,0,577,578,
		5,111,0,0,578,95,1,0,0,0,579,580,5,112,0,0,580,581,5,114,0,0,581,582,5,
		105,0,0,582,583,5,118,0,0,583,584,5,97,0,0,584,585,5,116,0,0,585,586,5,
		101,0,0,586,97,1,0,0,0,587,588,5,101,0,0,588,589,5,120,0,0,589,590,5,116,
		0,0,590,591,5,101,0,0,591,592,5,114,0,0,592,593,5,110,0,0,593,594,5,97,
		0,0,594,595,5,108,0,0,595,99,1,0,0,0,596,597,5,100,0,0,597,598,5,101,0,
		0,598,599,5,108,0,0,599,600,5,101,0,0,600,601,5,116,0,0,601,602,5,101,
		0,0,602,101,1,0,0,0,603,604,5,108,0,0,604,605,5,111,0,0,605,606,5,99,0,
		0,606,607,5,97,0,0,607,608,5,108,0,0,608,103,1,0,0,0,609,610,5,105,0,0,
		610,611,5,110,0,0,611,612,5,116,0,0,612,105,1,0,0,0,613,614,5,102,0,0,
		614,615,5,108,0,0,615,616,5,111,0,0,616,617,5,97,0,0,617,618,5,116,0,0,
		618,107,1,0,0,0,619,620,5,98,0,0,620,621,5,111,0,0,621,622,5,111,0,0,622,
		623,5,108,0,0,623,109,1,0,0,0,624,625,5,115,0,0,625,626,5,116,0,0,626,
		627,5,114,0,0,627,628,5,105,0,0,628,629,5,110,0,0,629,630,5,103,0,0,630,
		111,1,0,0,0,631,632,5,118,0,0,632,633,5,101,0,0,633,634,5,99,0,0,634,635,
		5,116,0,0,635,636,5,111,0,0,636,637,5,114,0,0,637,113,1,0,0,0,638,639,
		5,100,0,0,639,640,5,101,0,0,640,641,5,102,0,0,641,642,5,97,0,0,642,643,
		5,117,0,0,643,644,5,108,0,0,644,645,5,116,0,0,645,115,1,0,0,0,646,647,
		5,43,0,0,647,648,5,43,0,0,648,117,1,0,0,0,649,650,5,45,0,0,650,651,5,45,
		0,0,651,119,1,0,0,0,652,653,5,60,0,0,653,654,5,60,0,0,654,655,5,61,0,0,
		655,121,1,0,0,0,656,657,5,62,0,0,657,658,5,62,0,0,658,659,5,61,0,0,659,
		123,1,0,0,0,660,661,5,45,0,0,661,662,5,61,0,0,662,125,1,0,0,0,663,664,
		5,43,0,0,664,665,5,61,0,0,665,127,1,0,0,0,666,667,5,42,0,0,667,668,5,61,
		0,0,668,129,1,0,0,0,669,670,5,47,0,0,670,671,5,61,0,0,671,131,1,0,0,0,
		672,673,5,124,0,0,673,674,5,61,0,0,674,133,1,0,0,0,675,676,5,94,0,0,676,
		677,5,61,0,0,677,135,1,0,0,0,678,679,5,60,0,0,679,680,5,61,0,0,680,137,
		1,0,0,0,681,682,5,62,0,0,682,683,5,61,0,0,683,139,1,0,0,0,684,685,5,38,
		0,0,685,686,5,61,0,0,686,141,1,0,0,0,687,688,5,33,0,0,688,689,5,61,0,0,
		689,143,1,0,0,0,690,691,5,61,0,0,691,692,5,61,0,0,692,145,1,0,0,0,693,
		694,5,124,0,0,694,695,5,124,0,0,695,147,1,0,0,0,696,697,5,38,0,0,697,698,
		5,38,0,0,698,149,1,0,0,0,699,700,5,124,0,0,700,151,1,0,0,0,701,702,5,94,
		0,0,702,153,1,0,0,0,703,704,5,38,0,0,704,155,1,0,0,0,705,706,5,126,0,0,
		706,157,1,0,0,0,707,708,5,62,0,0,708,159,1,0,0,0,709,710,5,60,0,0,710,
		161,1,0,0,0,711,712,5,61,0,0,712,163,1,0,0,0,713,714,5,45,0,0,714,165,
		1,0,0,0,715,716,5,43,0,0,716,167,1,0,0,0,717,718,5,42,0,0,718,169,1,0,
		0,0,719,720,5,47,0,0,720,171,1,0,0,0,721,722,5,40,0,0,722,173,1,0,0,0,
		723,724,5,41,0,0,724,175,1,0,0,0,725,726,5,123,0,0,726,177,1,0,0,0,727,
		728,5,125,0,0,728,179,1,0,0,0,729,730,5,44,0,0,730,181,1,0,0,0,731,732,
		5,58,0,0,732,183,1,0,0,0,733,734,5,59,0,0,734,185,1,0,0,0,735,736,5,91,
		0,0,736,187,1,0,0,0,737,738,5,93,0,0,738,189,1,0,0,0,739,740,5,46,0,0,
		740,191,1,0,0,0,741,742,5,33,0,0,742,193,1,0,0,0,743,744,5,34,0,0,744,
		195,1,0,0,0,745,746,5,39,0,0,746,197,1,0,0,0,747,748,5,37,0,0,748,199,
		1,0,0,0,749,751,7,2,0,0,750,749,1,0,0,0,751,752,1,0,0,0,752,750,1,0,0,
		0,752,753,1,0,0,0,753,201,1,0,0,0,754,755,5,95,0,0,755,756,5,95,0,0,756,
		757,5,76,0,0,757,758,5,73,0,0,758,759,5,78,0,0,759,760,5,69,0,0,760,761,
		5,95,0,0,761,762,5,95,0,0,762,203,1,0,0,0,763,764,5,95,0,0,764,765,5,95,
		0,0,765,766,5,70,0,0,766,767,5,73,0,0,767,768,5,76,0,0,768,769,5,69,0,
		0,769,770,5,95,0,0,770,771,5,95,0,0,771,205,1,0,0,0,772,777,5,34,0,0,773,
		776,3,252,125,0,774,776,9,0,0,0,775,773,1,0,0,0,775,774,1,0,0,0,776,779,
		1,0,0,0,777,778,1,0,0,0,777,775,1,0,0,0,778,780,1,0,0,0,779,777,1,0,0,
		0,780,781,5,34,0,0,781,207,1,0,0,0,782,783,3,256,127,0,783,209,1,0,0,0,
		784,785,3,258,128,0,785,211,1,0,0,0,786,787,5,116,0,0,787,788,5,114,0,
		0,788,789,5,117,0,0,789,796,5,101,0,0,790,791,5,102,0,0,791,792,5,97,0,
		0,792,793,5,108,0,0,793,794,5,115,0,0,794,796,5,101,0,0,795,786,1,0,0,
		0,795,790,1,0,0,0,796,213,1,0,0,0,797,799,3,10,4,0,798,797,1,0,0,0,799,
		800,1,0,0,0,800,798,1,0,0,0,800,801,1,0,0,0,801,802,1,0,0,0,802,803,6,
		106,1,0,803,215,1,0,0,0,804,806,3,254,126,0,805,804,1,0,0,0,806,807,1,
		0,0,0,807,805,1,0,0,0,807,808,1,0,0,0,808,809,1,0,0,0,809,810,6,107,2,
		0,810,217,1,0,0,0,811,812,5,100,0,0,812,813,5,101,0,0,813,814,5,102,0,
		0,814,815,5,105,0,0,815,816,5,110,0,0,816,817,5,101,0,0,817,818,1,0,0,
		0,818,819,6,108,2,0,819,219,1,0,0,0,820,821,5,105,0,0,821,822,5,110,0,
		0,822,823,5,99,0,0,823,824,5,108,0,0,824,825,5,117,0,0,825,826,5,100,0,
		0,826,827,5,101,0,0,827,828,1,0,0,0,828,829,6,109,2,0,829,221,1,0,0,0,
		830,831,5,117,0,0,831,832,5,110,0,0,832,833,5,100,0,0,833,834,5,101,0,
		0,834,835,5,102,0,0,835,836,1,0,0,0,836,837,6,110,2,0,837,223,1,0,0,0,
		838,839,5,105,0,0,839,840,5,102,0,0,840,841,1,0,0,0,841,842,6,111,2,0,
		842,225,1,0,0,0,843,844,5,105,0,0,844,845,5,102,0,0,845,846,5,100,0,0,
		846,847,5,101,0,0,847,848,5,102,0,0,848,849,1,0,0,0,849,850,6,112,2,0,
		850,227,1,0,0,0,851,852,5,105,0,0,852,853,5,102,0,0,853,854,5,110,0,0,
		854,855,5,100,0,0,855,856,5,101,0,0,856,857,5,102,0,0,857,858,1,0,0,0,
		858,859,6,113,2,0,859,229,1,0,0,0,860,861,5,101,0,0,861,862,5,108,0,0,
		862,863,5,115,0,0,863,864,5,101,0,0,864,865,1,0,0,0,865,866,6,114,2,0,
		866,231,1,0,0,0,867,868,5,101,0,0,868,869,5,110,0,0,869,870,5,100,0,0,
		870,871,5,105,0,0,871,872,5,102,0,0,872,873,1,0,0,0,873,874,6,115,2,0,
		874,233,1,0,0,0,875,876,5,40,0,0,876,877,1,0,0,0,877,878,6,116,2,0,878,
		235,1,0,0,0,879,880,5,41,0,0,880,881,1,0,0,0,881,882,6,117,2,0,882,237,
		1,0,0,0,883,884,5,91,0,0,884,885,1,0,0,0,885,886,6,118,2,0,886,239,1,0,
		0,0,887,888,5,93,0,0,888,889,1,0,0,0,889,890,6,119,2,0,890,241,1,0,0,0,
		891,892,5,44,0,0,892,893,1,0,0,0,893,894,6,120,2,0,894,243,1,0,0,0,895,
		896,5,43,0,0,896,897,1,0,0,0,897,898,6,121,2,0,898,245,1,0,0,0,899,900,
		5,45,0,0,900,901,1,0,0,0,901,902,6,122,2,0,902,247,1,0,0,0,903,904,5,59,
		0,0,904,905,1,0,0,0,905,906,6,123,2,0,906,249,1,0,0,0,907,908,5,61,0,0,
		908,909,1,0,0,0,909,910,6,124,2,0,910,251,1,0,0,0,911,912,5,92,0,0,912,
		918,5,92,0,0,913,914,5,92,0,0,914,918,5,34,0,0,915,916,5,92,0,0,916,918,
		5,39,0,0,917,911,1,0,0,0,917,913,1,0,0,0,917,915,1,0,0,0,918,253,1,0,0,
		0,919,920,7,3,0,0,920,255,1,0,0,0,921,923,5,45,0,0,922,921,1,0,0,0,922,
		923,1,0,0,0,923,925,1,0,0,0,924,926,3,254,126,0,925,924,1,0,0,0,926,927,
		1,0,0,0,927,925,1,0,0,0,927,928,1,0,0,0,928,257,1,0,0,0,929,930,3,256,
		127,0,930,932,5,46,0,0,931,933,3,254,126,0,932,931,1,0,0,0,933,934,1,0,
		0,0,934,932,1,0,0,0,934,935,1,0,0,0,935,259,1,0,0,0,16,0,1,266,278,288,
		300,752,775,777,795,800,807,917,922,927,934,3,0,2,0,0,1,0,0,3,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
